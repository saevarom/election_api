# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-06-03 14:38
from __future__ import unicode_literals

import core.models.blocks
from django.db import migrations, models
import django.db.models.deletion
import wagtail.wagtailcore.blocks
import wagtail.wagtailcore.fields
import wagtail.wagtailcore.models
import wagtail.wagtailembeds.blocks
import wagtail.wagtailimages.blocks
import wagtail.wagtailimages.models


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0028_merge'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='overcastimage',
            name='collection',
            field=models.ForeignKey(default=wagtail.wagtailcore.models.get_root_collection_id, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.Collection', verbose_name='collection'),
        ),
        migrations.AlterField(
            model_name='overcastrendition',
            name='file',
            field=models.ImageField(height_field='height', upload_to=wagtail.wagtailimages.models.get_rendition_upload_to, width_field='width'),
        ),
        migrations.AlterField(
            model_name='standardpage',
            name='streamfield',
            field=wagtail.wagtailcore.fields.StreamField([(b'intro', wagtail.wagtailcore.blocks.RichTextBlock(icon='pilcrow', template='blocks/intro_block.html')), (b'paragraph', wagtail.wagtailcore.blocks.StructBlock([(b'paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), (b'extra_classes', wagtail.wagtailcore.blocks.CharBlock(required=False))], icon='pilcrow', template='blocks/paragraph_block.html')), (b'aligned_image', wagtail.wagtailcore.blocks.StructBlock([(b'image', wagtail.wagtailimages.blocks.ImageChooserBlock()), (b'alignment', core.models.blocks.ImageFormatChoiceBlock()), (b'caption', wagtail.wagtailcore.blocks.CharBlock(required=False)), (b'overlay_text', wagtail.wagtailcore.blocks.RichTextBlock(required=False)), (b'attribution', wagtail.wagtailcore.blocks.CharBlock(required=False)), (b'extra_classes', wagtail.wagtailcore.blocks.CharBlock(required=False))], label='Aligned image', template='blocks/aligned_image_block.html')), (b'image_collection', wagtail.wagtailcore.blocks.StructBlock([(b'images', wagtail.wagtailcore.blocks.ListBlock(wagtail.wagtailcore.blocks.StructBlock([('image', wagtail.wagtailimages.blocks.ImageChooserBlock(required=True)), ('caption', wagtail.wagtailcore.blocks.CharBlock(required=False)), ('credit', wagtail.wagtailcore.blocks.CharBlock(required=False))]))), (b'extra_classes', wagtail.wagtailcore.blocks.CharBlock(required=False))], label='Image collection', template='blocks/image_collection_block.html')), (b'pullquote', wagtail.wagtailcore.blocks.StructBlock([(b'quote', wagtail.wagtailcore.blocks.CharBlock(classname='quote title')), (b'attribution', wagtail.wagtailcore.blocks.CharBlock(required=False)), (b'extra_classes', wagtail.wagtailcore.blocks.CharBlock(required=False))], template='blocks/pullquote_block.html')), (b'raw_html', wagtail.wagtailcore.blocks.RawHTMLBlock(icon='code', label='Raw HTML', template='blocks/raw_html_block.html')), (b'embed', wagtail.wagtailembeds.blocks.EmbedBlock(icon='code', template='blocks/embed_block.html')), (b'grid_block', wagtail.wagtailcore.blocks.StructBlock([(b'template', wagtail.wagtailcore.blocks.TextBlock(help_text='Enter your template as a plain HTML.', rows=10)), (b'content_blocks', wagtail.wagtailcore.blocks.ListBlock(wagtail.wagtailcore.blocks.StreamBlock([(b'text_block', wagtail.wagtailcore.blocks.RichTextBlock(icon='pilcrow')), (b'aligned_image', wagtail.wagtailcore.blocks.StructBlock([(b'image', wagtail.wagtailimages.blocks.ImageChooserBlock()), (b'alignment', core.models.blocks.ImageFormatChoiceBlock()), (b'caption', wagtail.wagtailcore.blocks.CharBlock(required=False)), (b'overlay_text', wagtail.wagtailcore.blocks.RichTextBlock(required=False)), (b'attribution', wagtail.wagtailcore.blocks.CharBlock(required=False)), (b'extra_classes', wagtail.wagtailcore.blocks.CharBlock(required=False))], label='Aligned image', template='blocks/aligned_image_block.html')), (b'image_collection', wagtail.wagtailcore.blocks.StructBlock([(b'images', wagtail.wagtailcore.blocks.ListBlock(wagtail.wagtailcore.blocks.StructBlock([('image', wagtail.wagtailimages.blocks.ImageChooserBlock(required=True)), ('caption', wagtail.wagtailcore.blocks.CharBlock(required=False)), ('credit', wagtail.wagtailcore.blocks.CharBlock(required=False))]))), (b'extra_classes', wagtail.wagtailcore.blocks.CharBlock(required=False))], label='Image collection', template='blocks/image_collection_block.html')), (b'pullquote', wagtail.wagtailcore.blocks.StructBlock([(b'quote', wagtail.wagtailcore.blocks.CharBlock(classname='quote title')), (b'attribution', wagtail.wagtailcore.blocks.CharBlock(required=False)), (b'extra_classes', wagtail.wagtailcore.blocks.CharBlock(required=False))], template='blocks/pullquote_block.html')), (b'raw_html', wagtail.wagtailcore.blocks.RawHTMLBlock(icon='code', label='Raw HTML', template='blocks/raw_html_block.html')), (b'embed', wagtail.wagtailembeds.blocks.EmbedBlock(icon='code', template='blocks/embed_block.html')), (b'chart_block', wagtail.wagtailcore.blocks.StructBlock([(b'charts', wagtail.wagtailcore.blocks.ListBlock(wagtail.wagtailcore.blocks.StructBlock([('Title', wagtail.wagtailcore.blocks.CharBlock(classname='title', required=False)), ('Subtitle', wagtail.wagtailcore.blocks.CharBlock(required=False)), ('UniqueID', wagtail.wagtailcore.blocks.CharBlock(required=True)), ('Blocktype', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('bar', 'Bar Chart'), ('pie', 'Pie Chart'), ('doughnut', 'Doughnut Chart'), ('line', 'Line Chart')], default='bar')), ('Data', wagtail.wagtailcore.blocks.TextBlock(help_text='Data for Chart on the form: label1, value1, label2, value2, ...', required=True, rows=10)), ('Options', wagtail.wagtailcore.blocks.TextBlock(help_text='Extended options for the chart', required=False, rows=10))]))), (b'contained_charts', wagtail.wagtailcore.blocks.BooleanBlock(default=False, required=False)), (b'extra_classes', wagtail.wagtailcore.blocks.CharBlock(required=False))], icon='image', template='blocks/chart_block.html')), (b'table_block', wagtail.wagtailcore.blocks.StructBlock([(b'table', wagtail.wagtailcore.blocks.TextBlock(help_text='Enter your table as comma separated values, one line for each row.', rows=10)), (b'caption', wagtail.wagtailcore.blocks.CharBlock(required=False)), (b'header_row', wagtail.wagtailcore.blocks.BooleanBlock(help_text='Render first row as header if checked', required=False)), (b'footer_row', wagtail.wagtailcore.blocks.BooleanBlock(help_text='Render last row as footer if checked', required=False)), (b'header_column', wagtail.wagtailcore.blocks.BooleanBlock(help_text='Render first column as header if checked', required=False)), (b'extra_classes', wagtail.wagtailcore.blocks.CharBlock(required=False))], icon='list-ol', template='blocks/table_block.html'))]))), (b'extra_classes', wagtail.wagtailcore.blocks.CharBlock(required=False))], template='blocks/grid_block.html')), (b'chart_block', wagtail.wagtailcore.blocks.StructBlock([(b'charts', wagtail.wagtailcore.blocks.ListBlock(wagtail.wagtailcore.blocks.StructBlock([('Title', wagtail.wagtailcore.blocks.CharBlock(classname='title', required=False)), ('Subtitle', wagtail.wagtailcore.blocks.CharBlock(required=False)), ('UniqueID', wagtail.wagtailcore.blocks.CharBlock(required=True)), ('Blocktype', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('bar', 'Bar Chart'), ('pie', 'Pie Chart'), ('doughnut', 'Doughnut Chart'), ('line', 'Line Chart')], default='bar')), ('Data', wagtail.wagtailcore.blocks.TextBlock(help_text='Data for Chart on the form: label1, value1, label2, value2, ...', required=True, rows=10)), ('Options', wagtail.wagtailcore.blocks.TextBlock(help_text='Extended options for the chart', required=False, rows=10))]))), (b'contained_charts', wagtail.wagtailcore.blocks.BooleanBlock(default=False, required=False)), (b'extra_classes', wagtail.wagtailcore.blocks.CharBlock(required=False))], template='blocks/chart_block.html')), (b'table_block', wagtail.wagtailcore.blocks.StructBlock([(b'table', wagtail.wagtailcore.blocks.TextBlock(help_text='Enter your table as comma separated values, one line for each row.', rows=10)), (b'caption', wagtail.wagtailcore.blocks.CharBlock(required=False)), (b'header_row', wagtail.wagtailcore.blocks.BooleanBlock(help_text='Render first row as header if checked', required=False)), (b'footer_row', wagtail.wagtailcore.blocks.BooleanBlock(help_text='Render last row as footer if checked', required=False)), (b'header_column', wagtail.wagtailcore.blocks.BooleanBlock(help_text='Render first column as header if checked', required=False)), (b'extra_classes', wagtail.wagtailcore.blocks.CharBlock(required=False))], template='blocks/table_block.html'))]),
        ),
    ]
